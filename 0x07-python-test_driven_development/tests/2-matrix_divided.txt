=========================
Test for 2-matrix_divided
=========================
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [ #doctest: +ELLIPSIS
...    [1, 2, 3],
...    [4, 5.0, 6]
... ]
>>> print(matrix_divided(matrix, 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> print(matrix)
[[1, 2, 3], [4, 5.0, 6]]
>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
...
ZeroDivisionError: division by zero
>>> print(matrix_divided([], 3))
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix = [
...    [1, 2, 3],
...    [4, 'H', 6]
... ]
>>> print(matrix_divided(matrix, 2))
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix = [
...    [1, 2, 3],
...    [4, 6]
... ]
>>> print(matrix_divided(matrix, 2))
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size
>>> matrix = [
...    [1, 2, 3],
...    [4, 6, 12]
... ]
>>> print(matrix_divided(matrix, "he"))
Traceback (most recent call last):
...
TypeError: div must be a number
